* 概要

- はじめに
- ソースコードに関する注意点


* 単純ベイズ：初級編

** 準備

- 特徴がカテゴリ変数である単純ベイズ

- Numpy配列の初歩
-- array, empty, ones, zeros
-- dtype
-- ndim, shape, astype

* 設計仕様

- 入力データの仕様

- クラス設計
-- __init__，fit，predict

** 単純ベイズの実装 (1)

- 学習
- for文を使った実装
-- 配列のindexinig
-- 要素ごとの四則演算

- 予測
- predict_proba と predict メソッド
-- max (ついでに，min なども)

** 実行

- データのロード
-- genfromtxt, loadtxt，セーブについても
-- 行の分割，view の解説
- 呼び出しと実行
- 正解率の計算，等号を使った要素の抽出

* 単純ベイズ：上級編

** 単純ベイズの実装 (2)

- sum を使った実装
-- sum, 条件付き選択
- for を使った場合との速度比較

** 単純ベイズの実装 (3)

- histogram, bincountの利用
- MAP推定への拡張
-- rep

** 入力の整形

- as.array
- at_least_1d, at_least_2d, at_least_3d
- squeeze

** 実数値の単純ベイズ

- mean や var

** scikit-learn との連携

- scikit-learnの部分クラス化
-- 正解率 score method
- skealrn の Gaussian NB との比較
- 交差確認による汎化性能の評価

* その他のデータ処理

- structured array の利用
-- X と y を一撃で分類する
-- 文字列が入っていてもOK
- pandas の利用
- scipy.io
-- arff ファイルの扱い



* ロジスティック回帰

- 入力データ
-- r_ と c_ で 1 行列を加える
- シグモイド関数
-- exp, log, sin, cos などの初等関数
-- seterror
-- clip
- 最適化
-- scipy.optimize

- 欠損値処理
-- nonzero, mean, max

* 協調フィルタリング

** 潜在変数モデル：μ + bu + bi + p q^T

- 外部・内部IDの変換
-- unique

** 近隣法の実装

- GroupLensの方法
-- 利用者間のアイテムの和集合をとるなど intersect1d
-- Pearson 相関，順位相関，ユークリッド距離など


* 最適化

** SVM

- 凸2次最適化

** 圧縮センシング

- 線形計画

* 線形代数

** 線形回帰

** 主成分分析

** フィッシャー判別分析

* ベイズ

- PyMC の導入

* 強化学習

- PyBrain

* matplotlib

* 付録

- ソフトウェアのバージョン
- モジュールのimport
