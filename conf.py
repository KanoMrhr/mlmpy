#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# mlmpy documentation build configuration file, created by
# sphinx-quickstart on Mon Jan  2 06:14:03 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('sphinxext'))


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['ipython_console_highlighting']

# set math math extension
if 'MY_MATH_MODE' in os.environ:
    extensions.append(os.environ['MY_MATH_MODE'])
else:
    extensions.append('sphinx.ext.mathjax')

# If you want use MathJax CDN intead of your local copy, comment out the next line.
mathjax_path = '/MathJax/MathJax.js?config=default'

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = '機械学習の Python との出会い'
copyright = '2012, Toshihiro Kamishima'
author = '神嶌 敏弘 (Toshihiro Kamishima)'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
# version = '1.0.0'
# The full version, including alpha/beta/rc tags.
# release = '1.0.0'
import subprocess
import os
if os.access('.git', os.F_OK):
    p = subprocess.Popen(['git', '--no-pager', 'log', '-1', '--pretty=%H'],
                         stdout=subprocess.PIPE)
    version = str(p.stdout.readlines()[0][:-1])
    p = subprocess.Popen(['git', '--no-pager', 'log', '-1', '--pretty=%ai'],
                         stdout=subprocess.PIPE)
    release = str(p.stdout.readlines()[0][:-1])
else:
    version = "Unknown"
    release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'ja'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store',
    'source', '00memo', 'readme.*', '**/readme.*']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinxdoc'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

html_title = project
html_logo = 'html_logo.png'
html_domain_indices = False
html_search_language = 'ja'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'mlmpyja'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    'papersize': 'a4paper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    'pointsize': '12pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    'preamble': '\\renewcommand\\contentsname{目次}',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'mlmpyja.tex', project,
     author, 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'mlmpyja', 'Machine Learning Meets Python',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'mlmpyja', 'Machine Learning Meets Python',
     author, 'mlmpyja', 'NumPy / SciPy Tutorial.',
     'Miscellaneous'),
]



# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = [
    '_static/doctools.js',
    '_static/jquery.js',
    '_static/searchtools.js',
    '_static/translations.js',
    '_static/underscore.js',
    '_static/websupport.js',
    '_static/search.html',
    '_downloads/iris2.tsv',
    '_downloads/lr.py',
    '_downloads/lr1.py',
    '_downloads/lr2.py',
    '_downloads/lr3.py',
    '_downloads/nbayes1.py',
    '_downloads/nbayes1b.py',
    '_downloads/nbayes2.py',
    '_downloads/run_lr.py',
    '_downloads/run_nbayes1.py',
    '_downloads/run_nbayes1b.py',
    '_downloads/run_nbayes2.py',
    '_downloads/vote_filled.tsv'
]

epub_cover = ('_static/cover.png', '')
#epub_show_urls = 'footnote'
